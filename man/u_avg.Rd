% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/utilities.R
\name{u_avg}
\alias{u_avg}
\title{Utility function: Scenario-averaged utility function}
\usage{
u_avg(
  design,
  x,
  detail_params,
  utility,
  utility_params,
  p1s,
  weights_u = rep(1/nrow(p1s), nrow(p1s)),
  report_details = FALSE,
  penalty_maxtoer = NULL,
  threshold_maxtoer = NULL,
  use_future = FALSE
)
}
\arguments{
\item{design}{An object of class \code{fujikawa} created by the function
\code{baskwrap::setup_fujikawa_x} or \code{basksim::setup_fujikawa}.}

\item{x}{A named list, the design's tuning parameters to be optimized.}

\item{detail_params}{A named list of parameters that need to be supplied to
\code{get_details()}. It must not contain \code{p1},
as this is supplied separately.}

\item{utility}{A function returning the utility of a parameter combination
\code{x} of the form \code{utility(design, x, detail_params, ...)}, where \code{...} may
further parameters to be supplied to the utility.}

\item{utility_params}{A named list of further parameters that need to be
supplied to  the utility function.}

\item{p1s}{A numeric array in which each row defines a scenario of true
response rates under the alternative hypothesis.}

\item{weights_u}{A numeric vector of weights for calculating the weighted
average.}

\item{penalty_maxtoer}{A numeric, the penalty for punishing the maximal TOER across
all considered scenarios and all strata.}

\item{threshold_maxtoer}{A numeric, above this threshold maximal TOER is punished
by returning \code{-penalty_maxtoer} times the maximal TOER. Default is \code{NULL}, which
means no penalty.}

\item{use_future}{A logical, should \code{future_apply()} instead of \code{apply()}
be used for calculating the utilities to be averaged over. You must still
activate a \emph{future} backend for this option to take any effect, default is
\code{FALSE}.}
}
\value{
A numeric, the parameter combination's utility.
}
\description{
For a utility function \eqn{u(\cdot, \mathbf p)} and a set of true scenarios
\eqn{\{\mathbf p_i,\ldots\}}, calculate the weighted average utility function
\deqn{ \bar u(x) = \sum_i w_i u(x, \mathbf p_i)}
for a set of weights with \eqn{\sum_i w_i=1}. By default,
\eqn{w_i=\frac{1}{|\{\mathbf p_i,\ldots\}|}} for all \eqn{i}.
}
\examples{
design <- baskwrap::setup_fujikawa_x(k = 3, shape1 = 1, shape2 = 1,
                                     p0 = 0.2, backend = "exact")
x <- list(lambda = 0.99, epsilon = 2, tau = 0.5)
detail_params <- list(n = 20,
                      weight_fun = baskexact::weights_fujikawa,
                      logbase = exp(1))
p1s <- rbind(c(0.2,0.2,0.2), c(0.2,0.2,0.5), c(0.2,0.5,0.5), c(0.5,0.5,0.5))
# Averaging over u_ewp()
u_avg(design,
      x = x,
      detail_params = detail_params,
      utility = u_ewp,
      utility_params = list(penalty = 1, threshold = 0.1),
      p1s = p1s
      )
# Averaging over u_2ewp()
utility_params_2ewp <- list(penalty1 = 1, penalty2 = 2, threshold = 0.1)
u_avg(design,
      x = x,
      detail_params = detail_params,
      utility = u_2ewp,
      utility_params = utility_params_2ewp,
      p1s = p1s
      )
# Punishing maximal TOER in all scenarios and all strata
u_avg(design,
      x = x,
      detail_params = detail_params,
      utility = u_2ewp,
      utility_params = utility_params_2ewp,
      p1s = p1s,
      penalty_maxtoer = 1, threshold_maxtoer = 0.1
      )
}
