% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/utilities.R
\name{u_ewp}
\alias{u_ewp}
\alias{u_ecd}
\title{Utility functions: Discontinuous power/ECD functions with type-I error
penalty}
\usage{
u_ewp(
  design,
  x,
  detail_params,
  p1 = NULL,
  p2 = rep(design$p0, design$k),
  threshold,
  penalty,
  report_details = FALSE,
  reduce_calculations = ifelse(design$backend == "exact", TRUE, FALSE)
)

u_ecd(
  design,
  x,
  detail_params,
  p1 = NULL,
  p2 = rep(design$p0, design$k),
  penalty,
  threshold,
  report_details = FALSE,
  reduce_calculations = ifelse(design$backend == "exact", TRUE, FALSE)
)
}
\arguments{
\item{design}{An object of class \code{fujikawa} created by the function
\code{baskwrap::setup_fujikawa_x} or \code{basksim::setup_fujikawa}.}

\item{x}{A named list, the design's tuning parameters to be optimized.}

\item{detail_params}{A named list of parameters that need to be supplied to
\code{get_details()}. If \code{p1} exists, \code{detail_params$p1} is replaced by \code{p1} for
calculating  power resp. ECD and by \code{p2} for calculating FWER.}

\item{p1}{A numeric, response scenario for calculating power resp. ECD. This
can also be left \code{NULL}, then the function goes looking in
\code{detail_params$p1}.}

\item{p2}{A numeric, response scenario for calculating FWER, default is the
global null scenario.}

\item{threshold}{A numeric, for high FWER above this threshold we impose a
penalty, default: 0.1.}

\item{penalty}{A numeric, the scaling factor for FWER penalty, default: 1.}

\item{reduce_calculations}{A logical, only takes effect for the
\code{"exact"} backend. If \code{TRUE}, the function will only execute the
\code{get_details()} function for \code{p1} if the FWER for \code{p2} turned out
to be low enough. This may speed up function execution.
Default is \code{TRUE} for the \code{"exact"} backend and \code{FALSE} otherwise.}
}
\value{
A numeric, the parameter combination's utility.
}
\description{
These utility functions return experiment-wise power (EWP) or expected number
of
correct decisions (ECD) if the family-wise error rate (FWER) is low and the
negative FWER multiplied by a penalty parameter if the FWER is high.
}
\details{
The utility functions are
defined as
\deqn{u_{\text{ewp}}(x,\mathbf{p_1},\mathbf{p_2})=\mathrm{ewp}
(x,\mathbf{p_1}),}
if the FWER fulfills \eqn{\mathrm{fwer}(x,\mathbf{p_2}) < \eta_1}, and
\deqn{u_{\text{ewp}}(x,\mathbf{p_1},\mathbf{p_2})=
-\xi_1\cdot\mathrm{fwer}(x,\mathbf{p_2}),}
if \eqn{\mathrm{fwer}(x,\mathbf{p_2}) \geq \eta_1}.
}
\examples{
# Calculating the EWP utility using basksim as a backend
design <- baskwrap::setup_fujikawa_x(k = 3, shape1 = 1, shape2 = 1, p0 = 0.2)
u_ewp(design,
      x = list(lambda = 0.99, epsilon = 2, tau = 0.5),
      detail_params = list(p1 = c(0.5, 0.2, 0.2),
                           n = 20,
                           iter = 100,
                           logbase = exp(1)),
      penalty = 1, threshold = 0.1)
# Calculating the ECD utility using baskexact as a backend
design_x <- baskwrap::setup_fujikawa_x(k = 3, shape1 = 1, shape2 = 1,
                                       p0 = 0.2, backend = "exact")
u_ecd(design_x,
      x = list(lambda = 0.99, epsilon = 2, tau = 0.5),
      detail_params = list(p1 = c(0.5, 0.2, 0.2),
                           n = 20,
                           weight_fun = baskexact::weights_fujikawa,
                           logbase = exp(1)),
      penalty = 1, threshold = 0.1)
}
